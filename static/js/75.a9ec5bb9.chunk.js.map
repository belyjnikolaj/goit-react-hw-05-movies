{"version":3,"file":"static/js/75.a9ec5bb9.chunk.js","mappings":"2OACA,GAAgB,WAAa,yBAAyB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,oB,SCiDjH,EA1Ca,WACX,IAAMA,GAAUC,EAAAA,EAAAA,KACRC,GAAYC,EAAAA,EAAAA,MAAZD,QAGRE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAelC,OAbAI,EAAAA,EAAAA,YAAU,WASR,OARAV,EAAQW,SAAS,MACbT,IAAYM,KACdI,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,SAACC,GAAI,OAAKd,EAAQe,WAAWD,EAAM,OAAO,IAC/CE,MAAMhB,EAAQiB,aACjBR,EAAeP,IAGV,WAAO,CAChB,GAAG,CAACA,EAASM,EAAaR,KAIxBkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,WAAkBH,SAC9BpB,EAAQc,KAAKU,KAAI,SAACC,GAAE,OACnBP,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAAAA,KAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,IAASG,IAAG,GAAAC,OACxBF,EAAGG,aACC,iCAAmCH,EAAGG,aACtC,8DACFC,MAAM,OAAOC,IAAKL,EAAGM,MAAQ,aACnCV,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,KAASH,SAAEK,EAAGM,QAC7Bb,EAAAA,EAAAA,MAAA,KAAGI,UAAWC,EAAAA,KAASH,SAAA,CAAC,cAAaK,EAAGO,eAPZP,EAAGQ,GAQ5B,OAGTZ,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,IAAIhB,UAC5BC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,QAIhB,C,uJChDA,IAIaC,EAAY,SAAAC,GACvB,IAAMC,EAAM,IAAIC,IAAI,GAADd,OALJ,gCAKgBA,OAAGY,IAGlC,OAFAC,EAAIE,aAAaC,OAAO,UAJV,oCAMPC,MAAMJ,GAAK3B,MAAK,SAAAgC,GACrB,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MACd,GACF,ECZaC,EAAmB,WAE9B,OAAOZ,EADU,oBAEnB,EAEaa,EAAe,SAACC,GAC3B,IAAMb,EAAQ,uBAAAZ,OAA0ByB,GACxC,OAAOd,EAAUC,EACnB,EAEac,EAAkB,SAACnD,GAC9B,IAAMqC,EAAQ,UAAAZ,OAAazB,GAC3B,OAAOoC,EAAUC,EACnB,EAEa3B,EAAkB,SAACV,GAC9B,IAAMqC,EAAQ,UAAAZ,OAAazB,EAAO,YAClC,OAAOoC,EAAUC,EACnB,EAEae,EAAkB,SAAApD,GAC7B,IAAMqC,EAAQ,UAAAZ,OAAazB,EAAO,YAClC,OAAOoC,EAAUC,EACnB,C","sources":["webpack://react-homework-template/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","services/fetchData.js","services/endpointFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list__cast\":\"Cast_list__cast__pmJ7R\",\"item\":\"Cast_item__rvFp8\",\"name\":\"Cast_name__dC+34\",\"text\":\"Cast_text__p5O4B\"};","import { Suspense, useEffect, useState } from 'react'\nimport { Outlet, useParams } from 'react-router-dom';\n\nimport Loader from 'components/loader';\nimport { useCastomContext } from 'context/Context'\nimport { getMovieCredits } from 'services/endpointFetch';\nimport css from \"./Cast.module.css\";\n\nconst Cast = () => {\n  const context = useCastomContext()\n  const { movieId } = useParams();\n\n\n  const [prevMovieId, setPrevMovieId] = useState(null);\n\n  useEffect(() => {\n    context.setError(null);    \n    if (movieId !== prevMovieId) {\n      getMovieCredits(movieId)\n        .then((data) => context.handleData(data, 'cast'))\n        .catch(context.handleError);\n      setPrevMovieId(movieId);\n    }\n\n    return () => {};\n  }, [movieId, prevMovieId, context]);\n\n  \n  return (\n    <>\n      <ul className={css['list__cast']}>\n        {context.data.map((el) => (\n          <li className={css.item} key={el.id}>\n            <img className={css.img} src={`${\n                el.profile_path\n                  ? \"https://image.tmdb.org/t/p/w92\" + el.profile_path\n                  : \"https://www.reelviews.net/resources/img/default_poster.jpg\"\n              }`} width='92px' alt={el.name || \"No name\"} />\n            <h2 className={css.name}>{el.name}</h2>\n            <p className={css.text}>Character: { el.character }</p>\n          </li>\n        ))}   \n      </ul>\n      <Suspense fallback={<Loader />}>\n         <Outlet />\n      </Suspense>     \n    </>\n  )\n}\n\nexport default Cast","const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\nconst API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\nexport const fetchData = endpoint => {\n  const url = new URL(`${BASE_URL}${endpoint}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  return fetch(url).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n};\n\n// import axios from 'axios';\n// import Notiflix from 'notiflix';\n//\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\n// const API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\n// export const getFilms = () => {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// };\n\n// const fetchImages = async (searchText, page) => {\n//     const params = new URLSearchParams({\n//     key: API_KEY,\n//     q: searchText,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: 'true',\n//     per_page: 12,\n//     page: page,\n//   });\n\n//   try {\n//     const response = await axios.get(`${BASE_URL}?${params}`);\n//     const { data } = response;\n\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//     Notiflix.Notify.failure(\n//       'An error occurred while fetching images. Please try again later.'\n//     );\n\n//     return null;\n//   }\n// };\n\n// export default getFilms;\n","import { fetchData } from \"./fetchData\";\n\nexport const getTrendingFilms = () => {\n  const endpoint = '/trending/all/day';\n  return fetchData(endpoint);\n};\n\nexport const searchMovies = (query) => {\n  const endpoint = `/search/movie?query=${query}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieDetails = (movieId) => {\n  const endpoint = `/movie/${movieId}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieCredits = (movieId) => {\n  const endpoint = `/movie/${movieId}/credits`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieReviews = movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n  return fetchData(endpoint);\n};\n"],"names":["context","useCastomContext","movieId","useParams","_useState","useState","_useState2","_slicedToArray","prevMovieId","setPrevMovieId","useEffect","setError","getMovieCredits","then","data","handleData","catch","handleError","_jsxs","_Fragment","children","_jsx","className","css","map","el","src","concat","profile_path","width","alt","name","character","id","Suspense","fallback","Loader","Outlet","fetchData","endpoint","url","URL","searchParams","append","fetch","resp","ok","Error","statusText","json","getTrendingFilms","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}