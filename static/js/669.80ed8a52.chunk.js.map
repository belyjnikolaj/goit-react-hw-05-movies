{"version":3,"file":"static/js/669.80ed8a52.chunk.js","mappings":"6OACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sBAAjF,EAA8G,sB,SC2C9G,EArCgB,WACd,IAAMA,GAAUC,EAAAA,EAAAA,KACRC,GAAYC,EAAAA,EAAAA,MAAZD,QACVE,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAahC,OAXAI,EAAAA,EAAAA,YAAU,WAQR,OAPAV,EAAQW,SAAS,MACbT,IAAYM,KAClBI,EAAAA,EAAAA,IAAgBV,GACbW,MAAK,SAACC,GAAI,OAAKd,EAAQe,WAAWD,EAAM,UAAU,IAClDE,MAAMhB,EAAQiB,aACfR,EAAeP,IAER,WAAO,CAChB,GAAG,CAACA,EAASM,EAAaR,KAGxBkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASH,SACrBpB,EAAQc,KAAKU,OAAS,EACrBxB,EAAQc,KAAKW,KAAI,SAACC,GAAE,OAClBR,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAASH,SAAA,EACtBF,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAASH,SAAA,CAAC,WAASM,EAAGC,WACrCN,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAASH,SAAEM,EAAGE,YAFAF,EAAGG,GAG5B,KAGPR,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAASH,SAAC,iDAG5BC,EAAAA,EAAAA,KAACS,EAAAA,SAAQ,CAACC,UAAUV,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACW,EAAAA,EAAM,MAAUZ,UACvCC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,QAIhB,C,uJC1CA,IAIaC,EAAY,SAAAC,GACvB,IAAMC,EAAM,IAAIC,IAAI,GAADC,OALJ,gCAKgBA,OAAGH,IAGlC,OAFAC,EAAIG,aAAaC,OAAO,UAJV,oCAMPC,MAAML,GAAKvB,MAAK,SAAA6B,GACrB,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MACd,GACF,ECZaC,EAAmB,WAE9B,OAAOb,EADU,oBAEnB,EAEac,EAAe,SAACC,GAC3B,IAAMd,EAAQ,uBAAAG,OAA0BW,GACxC,OAAOf,EAAUC,EACnB,EAEae,EAAkB,SAAChD,GAC9B,IAAMiC,EAAQ,UAAAG,OAAapC,GAC3B,OAAOgC,EAAUC,EACnB,EAEagB,EAAkB,SAACjD,GAC9B,IAAMiC,EAAQ,UAAAG,OAAapC,EAAO,YAClC,OAAOgC,EAAUC,EACnB,EAEavB,EAAkB,SAAAV,GAC7B,IAAMiC,EAAQ,UAAAG,OAAapC,EAAO,YAClC,OAAOgC,EAAUC,EACnB,C","sources":["webpack://react-homework-template/./src/components/reviews/Reviews.module.css?9ce4","components/reviews/Reviews.jsx","services/fetchData.js","services/endpointFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__f6R8E\",\"item\":\"Reviews_item__j+-XR\",\"name\":\"Reviews_name__Jhj0A\",\"text\":\"Reviews_text__pgmvH\"};","import Loader from 'components/loader/Loader';\nimport { useCastomContext } from 'context/Context'\nimport { Suspense, useEffect, useState } from 'react'\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/endpointFetch';\nimport  css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const context = useCastomContext()\n  const { movieId } = useParams();\nconst [prevMovieId, setPrevMovieId] = useState(null);\n\n  useEffect(() => {\n    context.setError(null);    \n    if (movieId !== prevMovieId) {\n  getMovieReviews(movieId)\n    .then((data) => context.handleData(data, 'results'))\n    .catch(context.handleError);\n    setPrevMovieId(movieId);\n    }\n    return () => {};\n  }, [movieId, prevMovieId, context]);\n  \n  return (\n    <>\n      <ul className={css.list}>\n        {context.data.length > 0 ? (\n          context.data.map((el) => (\n            <li className={css.item} key={el.id}>\n              <h2 className={css.name}>Author: {el.author}</h2>\n              <p className={css.text}>{el.content}</p>\n            </li>\n          ))\n        ) : (\n          <p className={css.text}>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n      <Suspense fallback={<div><Loader /></div>}>\n         <Outlet />\n      </Suspense>\n    </>\n  )\n}\n\nexport default Reviews","const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\nconst API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\nexport const fetchData = endpoint => {\n  const url = new URL(`${BASE_URL}${endpoint}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  return fetch(url).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n};\n\n// import axios from 'axios';\n// import Notiflix from 'notiflix';\n//\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\n// const API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\n// export const getFilms = () => {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// };\n\n// const fetchImages = async (searchText, page) => {\n//     const params = new URLSearchParams({\n//     key: API_KEY,\n//     q: searchText,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: 'true',\n//     per_page: 12,\n//     page: page,\n//   });\n\n//   try {\n//     const response = await axios.get(`${BASE_URL}?${params}`);\n//     const { data } = response;\n\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//     Notiflix.Notify.failure(\n//       'An error occurred while fetching images. Please try again later.'\n//     );\n\n//     return null;\n//   }\n// };\n\n// export default getFilms;\n","import { fetchData } from \"./fetchData\";\n\nexport const getTrendingFilms = () => {\n  const endpoint = '/trending/all/day';\n  return fetchData(endpoint);\n};\n\nexport const searchMovies = (query) => {\n  const endpoint = `/search/movie?query=${query}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieDetails = (movieId) => {\n  const endpoint = `/movie/${movieId}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieCredits = (movieId) => {\n  const endpoint = `/movie/${movieId}/credits`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieReviews = movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n  return fetchData(endpoint);\n};\n"],"names":["context","useCastomContext","movieId","useParams","_useState","useState","_useState2","_slicedToArray","prevMovieId","setPrevMovieId","useEffect","setError","getMovieReviews","then","data","handleData","catch","handleError","_jsxs","_Fragment","children","_jsx","className","css","length","map","el","author","content","id","Suspense","fallback","Loader","Outlet","fetchData","endpoint","url","URL","concat","searchParams","append","fetch","resp","ok","Error","statusText","json","getTrendingFilms","searchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}