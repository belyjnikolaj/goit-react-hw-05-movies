{"version":3,"file":"static/js/842.acdc0a7f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/filmDetails/FilmDetails.module.css?6359","webpack://react-homework-template/./src/components/backLink/BackLink.module.css?ad0b","components/backLink/BackLink.jsx","webpack://react-homework-template/./src/components/additionalInfo/AdditionalInfo.module.css?a9ab","components/additionalInfo/AdditionalInfo.jsx","webpack://react-homework-template/./src/components/basicInfo/BasicInfo.module.css?9e6a","components/basicInfo/BasicInfo.jsx","components/filmDetails/FilmDetails.jsx","services/fetchData.js","services/endpointFetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FilmDetails_container__CSwjH\"};","// extracted by mini-css-extract-plugin\nexport default {\"back__link\":\"BackLink_back__link__CIDS8\",\"back__link-section\":\"BackLink_back__link-section__wPbSU\"};","import { Link } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport css from './BackLink.module.css';\n\nconst BackLink = ({ children, to }) => { \n\n  return (\n    <section className={css['back__link-section']}>\n      <Link className={css['back__link']} to={to}>\n        <HiArrowLeft size=\"14\" />\n        {children}\n      </Link>\n    </section>    \n  );\n};\n\nexport default BackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"section__info\":\"AdditionalInfo_section__info__w2EZu\",\"list\":\"AdditionalInfo_list__-Cfza\",\"item\":\"AdditionalInfo_item__ZYQAA\"};","import { Link } from 'react-router-dom';\nimport css from './AdditionalInfo.module.css';\n\nconst AdditionalInfo = () => {\n  \n  return (\n    <section className={css['section__info']}>\n        <h3>Additional information</h3>\n        <ul className={css.list}>\n            <li className={css.item}>\n                <Link to=\"cast\">Cast</Link>\n            </li>\n            <li className={css.item}>\n                <Link to=\"reviews\">Reviews </Link>\n            </li>       \n        </ul>            \n    </section> \n  )\n}\n\nexport default AdditionalInfo","// extracted by mini-css-extract-plugin\nexport default {\"data__section\":\"BasicInfo_data__section__Ei7Al\",\"img__container\":\"BasicInfo_img__container__XJEus\",\"info__box\":\"BasicInfo_info__box__BWAnY\",\"movie__title\":\"BasicInfo_movie__title__MCXvq\",\"title__overview\":\"BasicInfo_title__overview__H8IhL\",\"title__genres\":\"BasicInfo_title__genres__VmDj-\",\"list__genres\":\"BasicInfo_list__genres__eFZjN\",\"text\":\"BasicInfo_text__qQy7q\"};","import css from './BasicInfo.module.css';\n\nconst BasicInfo = ({ poster_path, title, release_date, overview, genres, vote_average }) => {\n  \n  return (\n    <section className={css['data__section']}>\n      <div>\n        <img\n          className={css['img__container']}\n          src={\n            poster_path\n              ? \"https://image.tmdb.org/t/p/w200\" + poster_path\n              : \"https://www.reelviews.net/resources/img/default_poster.jpg\"\n          }\n          alt={title || \"No name\"}\n        />\n      </div>\n      <div className={css['info__box']}>\n        <h1 className={css['movie__title']}>\n          {title || \"No name\"} ({release_date?.substring(0, 4) || \"No date\"})\n        </h1>\n        <p className={css.text}>User score: {Math.round(vote_average * 10)}%</p>\n        <h2 className={css['title__overview']}>Overview</h2>\n        <p className={css.text}>{overview}</p>\n        <h3 className={css['title__genres']}>Genres</h3>\n        <ul className={css['list__genres']}>\n          {genres.map((el) => (\n            <li className={css['item__text']} key={el.id}>{el.name}</li>\n          ))}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default BasicInfo;\n","import { Suspense, useEffect, useRef } from 'react';\nimport { useCastomContext } from 'context/Context';\n\nimport css from './FilmDetails.module.css'\nimport { getMovieDetails } from 'services/endpointFetch';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport BackLink from 'components/backLink';\nimport Loader from 'components/loader/Loader';\nimport AdditionalInfo from 'components/additionalInfo';\nimport BasicInfo from 'components/basicInfo/BasicInfo';\n\nconst FilmDetails = () => {\n  const { movieId } = useParams();\n  const context = useCastomContext();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? (\"/\" && \"/movies\"));\n  const { dataMovie } = context;\n  const { poster_path, title, release_date, overview, genres, vote_average } = dataMovie || {};\n  \n\n const previousMovieId = useRef(null);\n\nuseEffect(() => {\n  context.setError(null);\n  if (movieId !== previousMovieId.current) {\n    getMovieDetails(movieId)\n      .then(context.handleDataMovie)\n      .catch(context.handleError);\n    previousMovieId.current = movieId;\n  }\n  return () => {};\n}, [context, movieId]);\n\n  return (   \n    <div className={css.container}>      \n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      \n      \n      <div className={css.error}>      \n      {context.error && (\n        <div className={css.error}>{context.error}</div>\n      )}\n        \n      {dataMovie && (\n        <>\n            <BasicInfo\n              poster_path={poster_path}\n              title={title}\n              release_date={release_date}\n              overview={overview}\n              genres={genres}\n              vote_average={vote_average} />          \n          <AdditionalInfo/>\n        <Suspense fallback={<div><Loader /></div>}>\n         <Outlet />\n      </Suspense>      \n      </>        \n      )}\n    </div>\n    </div>    \n  );\n}\n\nexport default FilmDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\nconst API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\nexport const fetchData = endpoint => {\n  const url = new URL(`${BASE_URL}${endpoint}`);\n  url.searchParams.append('api_key', API_KEY);\n\n  return fetch(url).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n};\n\n// import axios from 'axios';\n// import Notiflix from 'notiflix';\n//\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const ENDPOINT = '/trending/all/day';\n// const API_KEY = 'bb37d49c53a672415b33eb59b7e6ce07';\n\n// export const getFilms = () => {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}`).then(\n//     resp => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// };\n\n// const fetchImages = async (searchText, page) => {\n//     const params = new URLSearchParams({\n//     key: API_KEY,\n//     q: searchText,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: 'true',\n//     per_page: 12,\n//     page: page,\n//   });\n\n//   try {\n//     const response = await axios.get(`${BASE_URL}?${params}`);\n//     const { data } = response;\n\n//     return data;\n//   } catch (error) {\n//     console.error(error);\n//     Notiflix.Notify.failure(\n//       'An error occurred while fetching images. Please try again later.'\n//     );\n\n//     return null;\n//   }\n// };\n\n// export default getFilms;\n","import { fetchData } from \"./fetchData\";\n\nexport const getTrendingFilms = () => {\n  const endpoint = '/trending/all/day';\n  return fetchData(endpoint);\n};\n\nexport const searchMovies = (query) => {\n  const endpoint = `/search/movie?query=${query}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieDetails = (movieId) => {\n  const endpoint = `/movie/${movieId}`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieCredits = (movieId) => {\n  const endpoint = `/movie/${movieId}/credits`;\n  return fetchData(endpoint);\n};\n\nexport const getMovieReviews = movieId => {\n  const endpoint = `/movie/${movieId}/reviews`;\n  return fetchData(endpoint);\n};\n"],"names":["_ref","children","to","_jsx","className","css","_jsxs","Link","HiArrowLeft","size","poster_path","title","release_date","overview","genres","vote_average","src","alt","substring","Math","round","map","el","name","id","_location$state$from","_location$state","movieId","useParams","context","useCastomContext","location","useLocation","backLinkHref","useRef","state","from","dataMovie","previousMovieId","useEffect","setError","current","getMovieDetails","then","handleDataMovie","catch","handleError","BackLink","error","_Fragment","BasicInfo","AdditionalInfo","Suspense","fallback","Loader","Outlet","fetchData","endpoint","url","URL","concat","searchParams","append","fetch","resp","ok","Error","statusText","json","getTrendingFilms","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}